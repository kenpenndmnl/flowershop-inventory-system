/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package flowershop;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.SwingConstants;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import net.proteanit.sql.DbUtils;


public class CashierForm extends javax.swing.JFrame {

    /**
     * Creates new form CashierForm
     */
    
    String customerName;
    String mobile;
    String address;
    double total_amount = 0;
    AddCustomerDialog customer = new AddCustomerDialog(this,true);
    int quantity;
    int total_qty = 0;
    double price;
    double totalChange, cashDouble;
    int countForAddItem = 0;
    int[] ids = new int[100];
    int order_type_id, recipient_status_id;
    Timestamp timestamp;
    String dateReceived;
    LoginForm ide = new LoginForm();
    int idUser = ide.getUserId();
    int orders_id; //for claimSection, get from orders table(SQL)
    int[] forReceiveId = new int[50]; //array of orders_id
    
    
    
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/flowershop", "root", "root");
    
    public CashierForm() throws SQLException{
        initComponents();
        try {
            setIconImage(ImageIO.read(new File("images/flower.png")));
        } catch (IOException ex) {
            Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("Employee - Flower Bouquet Management System");
        addWindowListener(new WindowAdapter() {
        @Override
        public void windowClosing(WindowEvent e) {
                int result = JOptionPane.showConfirmDialog(null, "Do you want to Log Out?", "Logout", JOptionPane.YES_NO_OPTION);
                if(result == JOptionPane.YES_OPTION){
                    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
                    LoginForm login = new LoginForm();
                    login.setVisible(true);
                }
            }
        });
        //System.out.println("your name start: " + usern);
        System.out.println("your id start: " + idUser);
        pickrad.setSelected(true);
        putDate();
        qty.setValue(1);
        ChangeListener changelistener = new ChangeListener()
        {
            int i = 1;
            public void stateChanged(ChangeEvent changeEvent) {
                JTabbedPane cashierFormTabbedPane = (JTabbedPane) changeEvent.getSource();
                int index = cashierFormTabbedPane.getSelectedIndex();
                if("Claim".equals(cashierFormTabbedPane.getTitleAt(index)))
                {
                    if(i == 1)
                    {
                        claimSectionDisplay();
                        i++;
                    }
                }
            }
        };
        cashierFormTabbedPane.addChangeListener(changelistener);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cashierFormTabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        amountLabel = new javax.swing.JLabel();
        cnametf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        addCustomerButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        bouquetIdtf = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        changeLabel = new javax.swing.JLabel();
        addItemButton = new javax.swing.JButton();
        payButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        printButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        delirad = new javax.swing.JRadioButton();
        pickrad = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        qty = new javax.swing.JSpinner();
        cashTF = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        claimTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        cashierFormTabbedPane.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentShown(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Transaction Details:");

        jTable1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bouquet Name", "Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Total Amount:");

        amountLabel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        amountLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        amountLabel.setText("0.00");

        cnametf.setEditable(false);
        cnametf.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Customer Name:");

        addCustomerButton.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        addCustomerButton.setText("Add Customer");
        addCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Bouquet Id:");

        bouquetIdtf.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        bouquetIdtf.setHorizontalAlignment(javax.swing.JTextField.TRAILING);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText("Quantity:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Cash:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Change:");

        changeLabel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        changeLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        changeLabel.setText("0.00");

        addItemButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        addItemButton.setText("Add Item");
        addItemButton.setNextFocusableComponent(bouquetIdtf);
        addItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemButtonActionPerformed(evt);
            }
        });

        payButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        payButton.setText("Pay");
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });

        clearButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        printButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel13.setText("Delivery Method:");

        delirad.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        delirad.setText("Delivery");
        delirad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliradActionPerformed(evt);
            }
        });

        pickrad.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        pickrad.setText("Pick-up");
        pickrad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickradActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel14.setText("Date:");

        jDateChooser1.setDateFormatString("MM/dd/yyyy");
        jDateChooser1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(delirad, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(pickrad, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delirad)
                    .addComponent(pickrad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 3, Short.MAX_VALUE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        qty.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        cashTF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cashTF.setText("0.00");
        cashTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cashTFKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel8)
                            .addComponent(jLabel2))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cnametf, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(bouquetIdtf)
                                .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(addCustomerButton)
                                .addComponent(qty, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(117, 117, 117)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cashTF, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(117, 117, 117)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(amountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(117, 117, 117)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(6, 6, 6)
                                    .addComponent(changeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(127, 127, 127)
                                    .addComponent(payButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(6, 6, 6)
                                    .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(6, 6, 6)
                                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 14, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(amountLabel)))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cashTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(changeLabel)))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(payButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cnametf, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addCustomerButton)
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(bouquetIdtf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)))
                        .addGap(18, 18, 18)
                        .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        cashTF.setHorizontalAlignment(SwingConstants.RIGHT);

        cashierFormTabbedPane.addTab("Cashier", jPanel1);

        claimTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer's Name", "Date Ordered", "Date to be Received", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        claimTable.setColumnSelectionAllowed(true);
        claimTable.getTableHeader().setReorderingAllowed(false);
        claimTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                claimTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(claimTable);
        claimTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (claimTable.getColumnModel().getColumnCount() > 0) {
            claimTable.getColumnModel().getColumn(0).setResizable(false);
            claimTable.getColumnModel().getColumn(1).setResizable(false);
            claimTable.getColumnModel().getColumn(2).setResizable(false);
            claimTable.getColumnModel().getColumn(3).setResizable(false);
            claimTable.getColumnModel().getColumn(3).setPreferredWidth(10);
        }

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Search:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 738, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        cashierFormTabbedPane.addTab("Claim", jPanel3);

        jMenu1.setText("Accounts");

        jMenuItem2.setText("Change Username");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Change Password");
        jMenu1.add(jMenuItem3);
        jMenu1.add(jSeparator2);

        jMenuItem4.setText("Log Out");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("About");

        jMenuItem1.setText("Version 1.0");
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cashierFormTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cashierFormTabbedPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*public int forIdUser()
    {
        //LoginForm bId = new LoginForm();
        //int idUser = bId.prop;
        //return idUser;
    }*/
    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        close();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void addCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerButtonActionPerformed
        // TODO add your handling code here:
        
        customer.setVisible(true);
        customerName = customer.getCustomerName();
        address = customer.getAddress();
        mobile = customer.getMobile();
        cnametf.setText(customerName);
        System.out.println(customerName);
    }//GEN-LAST:event_addCustomerButtonActionPerformed

    private void deliradActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliradActionPerformed
        // TODO add your handling code here:
        if("".equals(address) || address == null || address.isEmpty()){
            JOptionPane.showMessageDialog(this, "Customer Address is required.");
            delirad.setSelected(false);
            pickrad.setSelected(true);
        }
        else{
            delirad.setSelected(true);
            pickrad.setSelected(false);
        }
    }//GEN-LAST:event_deliradActionPerformed

    private void pickradActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickradActionPerformed
        // TODO add your handling code here:
        delirad.setSelected(false);
        pickrad.setSelected(true);
    }//GEN-LAST:event_pickradActionPerformed

    private void addItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemButtonActionPerformed
        try {
            // TODO add your handling code here:
            String flower = bouquetIdtf.getText();
            
            quantity = (int) qty.getValue();
            int maximum_quantity;
            String status;
            
            if(flower == null){
                JOptionPane.showMessageDialog(this, "Empty Values", "Item Missing",JOptionPane.WARNING_MESSAGE);
            }
            else{
                Class.forName("com.mysql.cj.jdbc.Driver");
                System.out.println("Connected Successfully");
                Statement stmt = con.createStatement();
                String query = "SELECT * FROM flowers WHERE id = '"+flower+"' and status = 'On stock'";
                ResultSet rs = stmt.executeQuery(query); 
                rs.next();
                String flower_name = rs.getString(2);
                maximum_quantity = rs.getInt(4);
                price = rs.getDouble(5);
                status = rs.getString(7);
                double total_price = quantity * price;
                total_amount = total_price + total_amount;
               
                if(maximum_quantity < quantity){
                    JOptionPane.showMessageDialog(this, String.format("You Exceeded {1} Items", (quantity-maximum_quantity)), "Status", JOptionPane.WARNING_MESSAGE);
                }
                else if("Out of stock".equals(status)){
                    JOptionPane.showMessageDialog(this, "Out of Stock", "Status", JOptionPane.WARNING_MESSAGE);
                }
                else{
                    DefaultTableModel  model = (DefaultTableModel)jTable1.getModel();
                    model.addRow(new Object[]{flower_name, quantity, total_price});

                    amountLabel.setText(String.valueOf(total_amount));
                    bouquetIdtf.setText("");
                    qty.setValue(1);
                    bouquetIdtf.requestFocus();
                }
            }
            int boqId = Integer.parseInt(flower);
            ids[countForAddItem] = boqId;
            System.out.println(ids[countForAddItem]);
            countForAddItem++;
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(CashierForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addItemButtonActionPerformed

    private void jPanel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentShown
        // TODO add your handling code here:
        bouquetIdtf.requestFocus();
    }//GEN-LAST:event_jPanel1ComponentShown

    public void claimSectionDisplay()
    {
        //claimTable.setAutoCreateColumnsFromModel(false);
        DefaultTableModel model = (DefaultTableModel)claimTable.getModel();
        int i = 0;
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            System.out.println("Connected Successfully");
            String query = "SELECT id, customer_name, date_ordered, "
                    + "date_to_be_received, delivery_status_id FROM orders WHERE user_id = '"+idUser+"' AND "
                    + "delivery_status_id = 1 AND "
                    + "delivery_type_id = 1";
            Statement stmt;
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            //claimTable.setModel(DbUtils.resultSetToTableModel(rs));
            boolean boolReceive = false;
            while(rs.next()) //&& i < claimTable.getModel().getRowCount()
            {
                orders_id = rs.getInt(1);
                String customerN = rs.getString(2);
                String orderDate = rs.getString(3);
                String receiveDate = rs.getString(4);
                int receive = rs.getInt(5);
                
                if(receive == 1)
                {
                    boolReceive = false;
                }
                
                forReceiveId[i] = orders_id;
                model.addRow(new Object[]{customerN, orderDate, receiveDate, boolReceive});
                //TableColumnModel tcm = claimTable.getColumnModel();
                //tcm.removeColumn(tcm.getColumn(0));
                i++;
                
            }
            
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(AdminForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    
    public void addOrder(String customerName, String address, String mobile, int order_type_id, int total_qty, double total_amount,
        double totalChange, double cashDouble, int recipient_status_id, Timestamp timestamp, String dateReceived, int idUser)
    {
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            System.out.println("Connected Successfully");
            String query = "INSERT INTO orders(customer_name, address, "
                    + "mobile, delivery_type_id, total_quantity, total_amount, "
                    + "mchange, cash, delivery_status_id, date_ordered, date_to_be_received, user_id) "
                    + "VALUES (?, ?, ?, (SELECT delivery_types.id from delivery_types WHERE delivery_types.id = ?), ?, ?, ?, ?, (SELECT delivery_status.id from delivery_status WHERE delivery_status.id = ?), ?, ?, ?)";
            PreparedStatement pst;
            pst = con.prepareStatement(query);

            pst.setString(1, customerName);
            pst.setString(2, address);
            pst.setString(3, mobile);
            pst.setInt(4, order_type_id);
            pst.setInt(5, total_qty);
            pst.setDouble(6, total_amount);
            pst.setDouble(7, totalChange);
            pst.setDouble(8, cashDouble);
            pst.setInt(9, recipient_status_id);
            pst.setTimestamp(10, timestamp);
            pst.setString(11, dateReceived);
            pst.setInt(12, idUser);
            pst.executeUpdate();
            System.out.println(customerName);
            System.out.println(address);
            System.out.println(mobile);
            System.out.println(order_type_id);
            System.out.println(total_qty);
            System.out.println(total_amount);
            System.out.println(totalChange);
            System.out.println(cashDouble);
            System.out.println(recipient_status_id);
            System.out.println(timestamp);
            System.out.println(dateReceived);
            JOptionPane.showMessageDialog(null, "Order added!");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(AdminForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex);
        }
        /*if(order_type_id == 1 && recipient_status_id == 1)
        {
            claimSectionDisplay(customerName, idUser, timestamp, dateReceived, recipient_status_id);
        }*/
    }
    
    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        /*if(delirad.isSelected())
        {
            LoginForm log = new LoginForm();
            customerN = cnametf.getText();
            userId = log.userId;
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            timeOrdered = new Timestamp(new Date().getTime());
            dateToReceive = dateFormat.format(jDateChooser1.getDate());
            
            addOrder(customerN, userId, timeOrdered, dateToReceive, stat);
            
        }*/
            order_type_id = 0;
            recipient_status_id = 0;
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            dateReceived = "";

            if(delirad.isSelected())
            {
                dateReceived = dateFormat.format(jDateChooser1.getDate());
                order_type_id = 1;
                recipient_status_id = 1;

            }
            if(pickrad.isSelected())
            {
                dateReceived = null;
                order_type_id = 2;
                recipient_status_id = 2;
            }

            /*if(payButton.getModel().isArmed() && printButton.getModel().isArmed())
            {
                recipient_status_id = 2;
            }
            if((!payButton.getModel().isArmed()) && (printButton.getModel().isArmed()))
            {
                System.out.println("Selected Print");
                recipient_status_id = 1;
            } */

            //LocalDateTime dateTime = LocalDateTime.now();
            
            //DateTimeFormatter myFormat = DateTimeFormatter.ofPattern("MM-dd-yyyy HH:mm:ss");
            timestamp = new Timestamp(new Date().getTime());
            total_qty = quantity + total_qty;
            String cashGet = cashTF.getText();
            cashDouble = Double.parseDouble(cashGet);
            System.out.println("your id: " + idUser);
            
            addOrder(customerName, address, mobile, order_type_id, total_qty, total_amount,
                totalChange, cashDouble, recipient_status_id, timestamp, dateReceived, idUser);
            try
            {
                int k, j = 0, quan = 0;
                int total_minq;
                Class.forName("com.mysql.cj.jdbc.Driver");
                System.out.println("Connected Successfully");
                PreparedStatement pst, pst2;
                String inString = "";
                for(k = 0; k < ids.length - 1; k++)
                {
                    if(k == 0)
                    {
                        inString = inString + ids[k];
                    }
                    else
                    {
                        inString = inString + "," + ids[k];
                    }
                }
                pst2 = con.prepareStatement("SELECT quantity, id FROM flowers WHERE id IN ("+inString+")");

                ResultSet rs = pst2.executeQuery();
                while(rs.next()) // && j < ids.length
                {
                    quan = rs.getInt(1); 
                    j = rs.getInt(2);
                    total_minq = quan - total_qty;
                    pst = con.prepareStatement("UPDATE flowers SET minimum_quantity = ? WHERE id = ?");
                    pst.setInt(1, total_minq);
                    pst.setInt(2, j);
                    System.out.println(total_minq);
                    pst.executeUpdate();
                }
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(AdminForm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex);
            } 
    }//GEN-LAST:event_printButtonActionPerformed

    private void cashTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cashTFKeyReleased
        // TODO add your handling code here:
        double cashGet = Double.parseDouble(cashTF.getText());
        double amountGet = Double.parseDouble(amountLabel.getText());
        totalChange = cashGet-amountGet;
        
        changeLabel.setText(String.valueOf(totalChange));
    }//GEN-LAST:event_cashTFKeyReleased

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        customer.cnametf.setText("");
        customer.addressTF.setText("");
        customer.mobiletf.setText("");
        cnametf.setText("");
        bouquetIdtf.setText("");
        qty.setValue(0);
        model.setRowCount(0);
        amountLabel.setText("0.00");
        cashTF.setText("0.00");
        changeLabel.setText("0.00");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtonActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Already Paid! \n Please print receipt.","Status" , JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_payButtonActionPerformed

    private void claimTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_claimTableMouseClicked
        // TODO add your handling code here:
        try {
            System.out.println(claimTable.getColumnCount());
            DefaultTableModel model = (DefaultTableModel)claimTable.getModel();
            int col = 3;
            int row = claimTable.getSelectedRow();
            String value = model.getValueAt(row, col).toString();
            if(!value.isEmpty())
            {

                int conf = JOptionPane.showConfirmDialog(null, "Are you sure that the order has been received?", "Confirmation", JOptionPane.YES_NO_OPTION);
                if(conf == JOptionPane.YES_OPTION)
                { 
                    System.out.println("Connected Successfully");
                    String query2 = "UPDATE orders SET delivery_status_id = 2 WHERE id = ?"; 
                    PreparedStatement pst;
                    pst = con.prepareStatement(query2);
                    pst.setInt(1, forReceiveId[row]);
                    pst.executeUpdate();
                    model.removeRow(row);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(CashierForm.class.getName()).log(Level.SEVERE, null, ex);   
        }
    }//GEN-LAST:event_claimTableMouseClicked
        
    public void close(){
        WindowEvent winClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        java.awt.Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }
    
    public void putDate(){
        Date date = new Date();
        jDateChooser1.setDate(date);
    }
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(CashierForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(CashierForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(CashierForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(CashierForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CashierForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCustomerButton;
    private javax.swing.JButton addItemButton;
    private javax.swing.JLabel amountLabel;
    private javax.swing.JTextField bouquetIdtf;
    private javax.swing.JTextField cashTF;
    private javax.swing.JTabbedPane cashierFormTabbedPane;
    private javax.swing.JLabel changeLabel;
    private javax.swing.JTable claimTable;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField cnametf;
    private javax.swing.JRadioButton delirad;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton payButton;
    private javax.swing.JRadioButton pickrad;
    private javax.swing.JButton printButton;
    private javax.swing.JSpinner qty;
    // End of variables declaration//GEN-END:variables
}
